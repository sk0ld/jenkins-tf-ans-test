---
- name: Install docker components
  hosts: dev,prod
  become: yes

  tasks:
   - name: Install packages
     apt:
       name:
        - docker.io
        - python3-docker
       state: present
       update_cache: yes

- name: Build dev image
  hosts: dev
  become: yes

  tasks:
   - name: Copy dev Dockerfile
     copy:
       src: ./dev/Dockerfile
       dest: /home/pcadm/Dockerfile
     
   - name: Copy s3cfg
     copy:
       src: /home/pcadm/.s3cfg
       dest: /home/pcadm/.s3cfg

   - name: Build dev image
     docker_image:
       build:
         path: /home/pcadm/
       name: dev-mvn-alpine  
       source: build
     delegate_to: "{{ groups.dev[0] }}" 


- name: Prod image activities
  hosts: prod
  become: yes
  vars:
    image_version: 1.0.0

  tasks:
   - name: Install s3cmd
     apt:
       name:
        - s3cmd
       state: present
       update_cache: yes

   - name: Copy prod Dockerfile
     copy:
       src: ./prod/Dockerfile
       dest: /home/pcadm/Dockerfile
     
   - name: Copy .s3cfg
     copy:
       src: /home/pcadm/.s3cfg
       dest: /root/.s3cfg

   - name: Download war file
     shell:
       s3cmd get s3://tf-bucket-yc2/hello-1.0.war hello-1.0.war 

   - name: Build prod image
     docker_image:
       build:
         path: /home/pcadm/
       name: prod-tomcat-alpine
       tag: "{{ image_version }}"  
       source: build
     delegate_to: "{{ groups.prod[0] }}" 

   - name: Delete bucket content
     shell:
       s3cmd rm s3://tf-bucket-yc2 --force --recursive


- name: Publish prod image & run image for stage
  hosts: prod
  become: yes
  vars:
    reg_image: cr.yandex/crp12ct5a0klh8dah1hc/prod-tomcat-alpine
    reg_key: /home/pcadm/key.json
 
  tasks:
   - name: Copy registry key
     copy:
       src: "{{ reg_key }}" 
       dest: "{{ reg_key }}"  

   - name: Login to YC registry
     docker_login:
       registry: cr.yandex
       username: json_key
       password: " {{ lookup('file', '{{ reg_key }}')}}"
       reauthorize: yes
     delegate_to: "{{ groups.prod[0] }}"

   - name: Publish to YC registry
     docker_image:
       name: prod-tomcat-alpine
       repository: "{{ reg_image }}"
       tag: "{{ image_version }}" 
       push: yes
       source: local
     delegate_to: "{{ groups.prod[0] }}"  

   - name: Pull image from YC registry to stage
     docker_container:
       name: boxfuse-tomcat
       image: "{{ reg_image }}:{{ image_version }}" 
       ports:
        - "8080:8080" 
     delegate_to: "{{ groups.prod[0] }}"              
