---
- name: install docker
  hosts: dev,prod
  become: yes

  tasks:
   - name: install packages
     apt:
       name:
        - docker.io
        - python3-docker
       state: present
       update_cache: yes

- name: build dev image
  hosts: dev
  become: yes

  tasks:
   - name: copy dev Dockerfile
     copy:
       src: ./dev/Dockerfile
       dest: /home/pcadm/Dockerfile
     
   - name: copy s3cfg
     copy:
       src: /home/pcadm/.s3cfg
       dest: /home/pcadm/.s3cfg

   - name: Build dev image
     docker_image:
       build:
         path: /home/pcadm/
       name: dev-mvn-alpine  
       source: build
     delegate_to: "{{ groups.dev[0] }}" 


- name: build prod image
  hosts: prod
  become: yes

  tasks:
   - name: install s3cmd
     apt:
       name:
        - s3cmd
       state: present
       update_cache: yes

   - name: copy prod Dockerfile
     copy:
       src: ./prod/Dockerfile
       dest: /home/pcadm/Dockerfile
     
   - name: copy s3cfg
     copy:
       src: /home/pcadm/.s3cfg
       dest: /root/.s3cfg

   - name: download war file
     shell:
       s3cmd get s3://tf-bucket-yc/hello-1.0.war hello-1.0.war 

   - name: Build prod image
     docker_image:
       build:
         path: /home/pcadm/
       name: prod-tomcat-alpine  
       source: build
     delegate_to: "{{ groups.prod[0] }}" 

   - name: delete bucket content
     shell:
       s3cmd rm s3://tf-bucket-yc --force --recursive


- name: publish prod image
  hosts: prod
  become: yes
 
  tasks:
   - name: copy registry key
     copy:
       src: /home/pcadm/key.json
       dest: /root/key.json  


   - name: login to YC registry
     docker_login:
       registry: cr.yandex
       username: json_key
       password: "{{ lookup('file', 'key.json') }}"
       reauthorize: yes            